<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="8" passed="6">
  <reporter-output>
    <line>
      <![CDATA[Saved <a href=../src/snapShot/08_Jan_2016__12_37_16PM.png>Screenshot</a>]]>
    </line>
  </reporter-output>
  <suite name="Suite1" duration-ms="19867" started-at="2016-01-08T07:06:57Z" finished-at="2016-01-08T07:07:16Z">
    <groups>
    </groups>
    <test name="UserloginTest01" duration-ms="19867" started-at="2016-01-08T07:06:57Z" finished-at="2016-01-08T07:07:16Z">
      <class name="executeMain.ExecuteSuit">
        <test-method status="PASS" signature="setup()[pri:0, instance:executeMain.ExecuteSuit@c8e2a4]" name="setup" is-config="true" duration-ms="6056" started-at="2016-01-08T12:36:57Z" finished-at="2016-01-08T12:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="methodLog4j()[pri:0, instance:executeMain.ExecuteSuit@c8e2a4]" name="methodLog4j" is-config="true" duration-ms="42" started-at="2016-01-08T12:37:03Z" finished-at="2016-01-08T12:37:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLog4j -->
        <test-method status="FAIL" signature="loginPage()[pri:0, instance:executeMain.ExecuteSuit@c8e2a4]" name="loginPage" duration-ms="13398" started-at="2016-01-08T12:37:03Z" finished-at="2016-01-08T12:37:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [LogIn] but found [Log In]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [LogIn] but found [Log In]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at executeMain.ExecuteSuit.loginPage(ExecuteSuit.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1220)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Saved <a href=../src/snapShot/08_Jan_2016__12_37_16PM.png>Screenshot</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- loginPage -->
        <test-method status="SKIP" signature="loginCredentialsReadXl(java.lang.String, java.lang.String)[pri:0, instance:executeMain.ExecuteSuit@c8e2a4]" name="loginCredentialsReadXl" duration-ms="0" started-at="2016-01-08T12:37:16Z" data-provider="dataValues" depends-on-methods="executeMain.ExecuteSuit.loginPage" finished-at="2016-01-08T12:37:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginCredentialsReadXl -->
      </class> <!-- executeMain.ExecuteSuit -->
    </test> <!-- UserloginTest01 -->
  </suite> <!-- Suite1 -->
  <suite name="My test suite" duration-ms="0" started-at="2016-01-08T07:07:51Z" finished-at="2016-01-08T07:07:51Z">
    <groups>
    </groups>
  </suite> <!-- My test suite -->
  <suite name="Suite2" duration-ms="21826" started-at="2016-01-08T07:07:17Z" finished-at="2016-01-08T07:07:38Z">
    <groups>
    </groups>
    <test name="AdminAccountTest02" duration-ms="21826" started-at="2016-01-08T07:07:17Z" finished-at="2016-01-08T07:07:38Z">
      <class name="executeMain.ExecuteSuit">
        <test-method status="PASS" signature="methodLog4j()[pri:0, instance:executeMain.ExecuteSuit@13f87b1]" name="methodLog4j" is-config="true" duration-ms="2" started-at="2016-01-08T12:37:17Z" finished-at="2016-01-08T12:37:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLog4j -->
        <test-method status="PASS" signature="setup()[pri:0, instance:executeMain.ExecuteSuit@13f87b1]" name="setup" is-config="true" duration-ms="0" started-at="2016-01-08T12:37:17Z" finished-at="2016-01-08T12:37:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="adminLogin()[pri:0, instance:executeMain.ExecuteSuit@13f87b1]" name="adminLogin" duration-ms="4399" started-at="2016-01-08T12:37:17Z" finished-at="2016-01-08T12:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminLogin -->
        <test-method status="PASS" signature="adminAccount()[pri:0, instance:executeMain.ExecuteSuit@13f87b1]" name="adminAccount" duration-ms="16983" started-at="2016-01-08T12:37:21Z" finished-at="2016-01-08T12:37:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminAccount -->
        <test-method status="PASS" signature="fetchValuesFromPendingUserTab()[pri:0, instance:executeMain.ExecuteSuit@13f87b1]" name="fetchValuesFromPendingUserTab" duration-ms="437" started-at="2016-01-08T12:37:38Z" finished-at="2016-01-08T12:37:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchValuesFromPendingUserTab -->
      </class> <!-- executeMain.ExecuteSuit -->
    </test> <!-- AdminAccountTest02 -->
  </suite> <!-- Suite2 -->
  <suite name="Suite3" duration-ms="12938" started-at="2016-01-08T07:07:38Z" finished-at="2016-01-08T07:07:51Z">
    <groups>
    </groups>
    <test name="providerAccountTest03" duration-ms="12938" started-at="2016-01-08T07:07:38Z" finished-at="2016-01-08T07:07:51Z">
      <class name="executeMain.ExecuteSuit">
        <test-method status="PASS" signature="setup()[pri:0, instance:executeMain.ExecuteSuit@ba6f6]" name="setup" is-config="true" duration-ms="0" started-at="2016-01-08T12:37:38Z" finished-at="2016-01-08T12:37:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="methodLog4j()[pri:0, instance:executeMain.ExecuteSuit@ba6f6]" name="methodLog4j" is-config="true" duration-ms="2" started-at="2016-01-08T12:37:38Z" finished-at="2016-01-08T12:37:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLog4j -->
        <test-method status="PASS" signature="providerAccountLogin()[pri:0, instance:executeMain.ExecuteSuit@ba6f6]" name="providerAccountLogin" duration-ms="8785" started-at="2016-01-08T12:37:38Z" finished-at="2016-01-08T12:37:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- providerAccountLogin -->
        <test-method status="PASS" signature="alert()[pri:0, instance:executeMain.ExecuteSuit@ba6f6]" name="alert" duration-ms="3290" started-at="2016-01-08T12:37:47Z" finished-at="2016-01-08T12:37:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alert -->
        <test-method status="PASS" signature="frameHandle()[pri:0, instance:executeMain.ExecuteSuit@ba6f6]" name="frameHandle" duration-ms="855" started-at="2016-01-08T12:37:50Z" finished-at="2016-01-08T12:37:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- frameHandle -->
      </class> <!-- executeMain.ExecuteSuit -->
    </test> <!-- providerAccountTest03 -->
  </suite> <!-- Suite3 -->
</testng-results>
